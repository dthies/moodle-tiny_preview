{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Preview user interface implementation.\n *\n * @module      tiny_preview/ui\n * @copyright   2022 Daniel Thies <dethies@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Modal from 'tiny_preview/modal';\nimport ModalFactory from 'core/modal_factory';\nimport {displayException} from 'core/notification';\nimport {notifyFilterContentUpdated} from 'core/event';\nimport * as Options from './options';\nimport * as TinyPreviewRepository from 'tiny_preview/repository';\n\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = (editor, data) => {\n\n    return TinyPreviewRepository.filterContent(\n        Options.getContextId(editor),\n        editor.getBody().innerHTML\n    ).then(result => {\n        return Object.assign(result, {\n            elementid: editor.id,\n            showOptions: false,\n        }, data);\n    }).catch(displayException);\n};\n\nconst displayDialogue = async(editor, data = {}) => {\n    const modal = await ModalFactory.create({\n        type: Modal.TYPE,\n        templateContext: await getTemplateContext(editor, data),\n        large: true,\n    }),\n        $root = await modal.getRoot(),\n        root = $root[0];\n\n    modal.show();\n    notifyFilterContentUpdated(root);\n};\n"],"names":["editor","displayDialogue","getTemplateContext","data","TinyPreviewRepository","filterContent","Options","getContextId","getBody","innerHTML","then","result","Object","assign","elementid","id","showOptions","catch","displayException","async","modal","ModalFactory","create","type","Modal","TYPE","templateContext","large","$root","getRoot","root","show"],"mappings":";;;;;;;0TA8B6BA,SACzBC,gBAAgBD,eAUdE,mBAAqB,CAACF,OAAQG,OAEzBC,sBAAsBC,cACzBC,QAAQC,aAAaP,QACrBA,OAAOQ,UAAUC,WACnBC,MAAKC,QACIC,OAAOC,OAAOF,OAAQ,CACzBG,UAAWd,OAAOe,GAClBC,aAAa,GACdb,QACJc,MAAMC,gCAGPjB,gBAAkBkB,eAAMnB,YAAQG,4DAAO,SACnCiB,YAAcC,uBAAaC,OAAO,CACpCC,KAAMC,eAAMC,KACZC,sBAAuBxB,mBAAmBF,OAAQG,MAClDwB,OAAO,IAEPC,YAAcR,MAAMS,UACpBC,KAAOF,MAAM,GAEjBR,MAAMW,6CACqBD"}