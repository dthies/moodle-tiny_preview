define("tiny_preview/ui",["exports","tiny_preview/modal","core/modal_factory","core/notification","core/event","./options","tiny_preview/repository"],(function(_exports,_modal,_modal_factory,_notification,_event,Options,TinyPreviewRepository){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Tiny Preview user interface implementation.
   *
   * @module      tiny_preview/ui
   * @copyright   2022 Daniel Thies <dethies@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.handleAction=void 0,_modal=_interopRequireDefault(_modal),_modal_factory=_interopRequireDefault(_modal_factory),Options=_interopRequireWildcard(Options),TinyPreviewRepository=_interopRequireWildcard(TinyPreviewRepository);_exports.handleAction=editor=>{displayDialogue(editor)};const getTemplateContext=(editor,data)=>TinyPreviewRepository.filterContent(Options.getContextId(editor),editor.getBody().innerHTML).then((result=>Object.assign(result,{elementid:editor.id,showOptions:!1},data))).catch(_notification.displayException),displayDialogue=async function(editor){let data=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const modal=await _modal_factory.default.create({type:_modal.default.TYPE,templateContext:await getTemplateContext(editor,data),large:!0}),$root=await modal.getRoot(),root=$root[0];modal.show(),(0,_event.notifyFilterContentUpdated)(root)}}));

//# sourceMappingURL=ui.min.js.map